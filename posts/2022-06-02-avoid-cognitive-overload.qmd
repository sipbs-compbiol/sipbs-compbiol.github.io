---
title: "How to Avoid Cognitive Overload In Your Summer/Honours Project"
description: "Approaching your work in a way that softens the learning curve"
image: ../assets/images/cognitive_overload.jpg
categories:
  - Student
  - advice
  - studentships
  - MSc students
  - Internships
  - supervision
author: "Leighton Pritchard"
date: 2022-06-02
date-modified: 2024-12-05
---

::: {.callout-tip}
## Credit 

This post is partly based on ["Practicals made perfect" by Colin McGill](https://edu.rsc.org/ideas/how-to-apply-cognitive-load-theory-to-chemistry-practicals/4015738.article)
:::

::: {.callout-important}
## tldr;

- a research project in computational biology will require you to learn new concepts alongside new skills; this is difficult and rushing it can make you feel frustrated
- we like it when you ask questions to be sure of what you are doing: ask (maybe several people) if you don't understand something
- make sure you understand the goal of your activity and how it is achieved, before starting it
- learning new _concepts_ and new _skills_ simultaneously is difficult: learn the _concepts_ first to support learning the _skill_
- become familiar with new software before using it to answer your research question
:::

## Computational biology may involve many unfamiliar concepts and skills

Most of our summer and other project students come to our group with a background in biomedical science, but not in computing or maths - the core skills of computational biology. We do aim to make projects as accessible as possible for students coming from a more biological background, but it is impossible to avoid presenting challenging new concepts and skills as part of the project. We do aim to make these useful in a broader context, and hope that these challenges empower students to continue learning when they leave the group.

All the same, we are asking you as students to learn novel _concepts_ and novel _skills_ at the same time. This is additional cognitive load over and above the focus on developing practical skills within a familiar conceptual setting, as might be the case with a lab project. Rushing your project will overload your ability to learn, and may well lead to frustration, especially if you compare apparent progress to friends doing lab projects (always a doubtful activity).

Your project should be challenging, and you should feel challenged, but the group is here to support you, and we are available for you to ask questions and get guidance. We want you to learn and do well.

## Be sure of the focus of each practical activity

Your project will comprise a series of practical activities. These will likely have been chosen in such a way that they each answer smaller questions that, together, contribute to answering a larger overarching question. They will probably also have been chosen in a way that cuts out some of the "noise" of research, so that you can focus on developing a single concept or answering a single self-contained research question.

You are less likely to learn the skills and concepts for each of the smaller activities - and might even accidentally ask the wrong scientific question - if you do not understand what you are meant to be doing in that activity, and why. If the instructions or guidance for an activity are unclear, _please ask your supervisor or a member of the group for guidance_.

Similarly, it can help to understand the rationale for an activity if you know where it fits in answering the larger questions of the project. If you are unsure about where an activity fits, _please ask your supervisor or a member of the group_.

## Try to learn concepts first

A research project is not like a lab practical: you are expected to learn independently, and your supervisor doesn't know the answers any more than you do, so they won't be able to give the same kind of positive confirmation about _outcomes_ as you might expect from a teaching lab. But your supervisor, and other members of the group, should know _how_ to ask the scientific questions that give you the answers. We can't tell you that your answer is correct, but we can probably tell you if likely asked the right question in the right way.

In your project, these questions are likely to involve new _concepts_ **and** new _skills_ for you.

Trying to learn new _concepts_ **and** new _skills_ is much harder than trying to learn either in isolation. Our brains have a limited capacity and it can quickly get overloaded if there is too much new information. If you understand the concepts behind the new techniques before you learn them, you will have a mental framework that supports and guides your research work. Without that understanding, you will be learning concepts and techniques at the same time, and it won't go as well.

You may well learn concepts quickest if someone explains them to you in a way that resonates with your understanding or way of thinking. It is part of your supervisor's role (supported by other members of the group) to explain the concepts associated with your project. If you don't understand an explanation, it is important to say so, as an alternative explanation may work better for you. If you are having difficulty understanding a concept when explained by one member of the group, ask another group member - we each understand and explain ideas slightly differently, and it may be that one person's way of thinking works for you better than others'.

## Become familiar with software before using it to answer your question

Bioinformatics software can be very complicated, and also very subtle. There are often many options to choose, with a wide array of possible settings, and this can be intimidating and baffling. It can be hard to know what settings to choose (and many people never use any but the default settings).

If you understance the _concepts_ of what you are doing, this can guide your understanding and choice of settings for a piece of software. If you know that setting X is best for long sequences, and setting Y best for short sequences - and that your work focuses on long sequences - you can choose the appropriate setting.

It is also a good idea to _play_ with a new piece of software to see how changing settings can affect the way it works. Use a small dataset so the program runs quickly, and try changing the parameters or using different options. Some changes might alter the output greatly, some not at all. But you will gain a knowledge about the available options, and intuition about what settings matter.

The important thing is that by understanding the _concept_ or the behaviour of the tool itself, you become _familiar_ with it, and then your focus can be on the scientific question you're asking, and you do not become overloaded with trying to learn about a particular tool at the same time.

